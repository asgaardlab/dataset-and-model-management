call_root_type,method_name,method_call,line_no,call_root,call_root_line_no,qualifying_name,call_root_package,relative_file_path,repository_name,file_path
import,load,"yaml_cfg = yaml.load(f, Loader=yaml.FullLoader)",205,import yaml,9,yaml.load,yaml,config.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\config.py
import,load,data = np.load(self.inputs[index]),82,import numpy as np,16,numpy.load,numpy,dataset/data_loader/BaseLoader.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\dataset\data_loader\BaseLoader.py
import,load,label = np.load(self.labels[index]),83,import numpy as np,16,numpy.load,numpy,dataset/data_loader/BaseLoader.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\dataset\data_loader\BaseLoader.py
import,load,labels = json.load(f),130,import json,11,json.load,json,dataset/data_loader/PURELoader.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\dataset\data_loader\PURELoader.py
assignment_import,load_state_dict,self.model.load_state_dict(torch.load(self.config.INFERENCE.MODEL_PATH)),137,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",45,torch.load_state_dict,torch,neural_methods/trainer/DeepPhysTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\DeepPhysTrainer.py
import,load,self.model.load_state_dict(torch.load(self.config.INFERENCE.MODEL_PATH)),137,import torch,8,torch.load,torch,neural_methods/trainer/DeepPhysTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\DeepPhysTrainer.py
assignment_import,load_state_dict,self.model.load_state_dict(torch.load(last_epoch_model_path)),145,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",45,torch.load_state_dict,torch,neural_methods/trainer/DeepPhysTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\DeepPhysTrainer.py
import,load,self.model.load_state_dict(torch.load(last_epoch_model_path)),145,import torch,8,torch.load,torch,neural_methods/trainer/DeepPhysTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\DeepPhysTrainer.py
assignment_import,load_state_dict,self.model.load_state_dict(torch.load(best_model_path)),151,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",45,torch.load_state_dict,torch,neural_methods/trainer/DeepPhysTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\DeepPhysTrainer.py
import,load,self.model.load_state_dict(torch.load(best_model_path)),151,import torch,8,torch.load,torch,neural_methods/trainer/DeepPhysTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\DeepPhysTrainer.py
assignment_import,load_state_dict,self.model.load_state_dict(torch.load(self.config.INFERENCE.MODEL_PATH)),152,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",50,torch.load_state_dict,torch,neural_methods/trainer/EfficientPhysTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\EfficientPhysTrainer.py
import,load,self.model.load_state_dict(torch.load(self.config.INFERENCE.MODEL_PATH)),152,import torch,8,torch.load,torch,neural_methods/trainer/EfficientPhysTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\EfficientPhysTrainer.py
assignment_import,load_state_dict,self.model.load_state_dict(torch.load(last_epoch_model_path)),160,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",50,torch.load_state_dict,torch,neural_methods/trainer/EfficientPhysTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\EfficientPhysTrainer.py
import,load,self.model.load_state_dict(torch.load(last_epoch_model_path)),160,import torch,8,torch.load,torch,neural_methods/trainer/EfficientPhysTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\EfficientPhysTrainer.py
assignment_import,load_state_dict,self.model.load_state_dict(torch.load(best_model_path)),166,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",50,torch.load_state_dict,torch,neural_methods/trainer/EfficientPhysTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\EfficientPhysTrainer.py
import,load,self.model.load_state_dict(torch.load(best_model_path)),166,import torch,8,torch.load,torch,neural_methods/trainer/EfficientPhysTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\EfficientPhysTrainer.py
assignment_unknown,load_state_dict,self.model.load_state_dict(torch.load(self.config.INFERENCE.MODEL_PATH)),138,self.model = PhysNet_padding_Encoder_Decoder_MAX(,32,PhysNet_padding_Encoder_Decoder_MAX(frames=config.MODEL.PHYSNET.FRAME_NUM).to.load_state_dict,PhysNet_padding_Encoder_Decoder_MAX(frames=config,neural_methods/trainer/PhysnetTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\PhysnetTrainer.py
import,load,self.model.load_state_dict(torch.load(self.config.INFERENCE.MODEL_PATH)),138,import torch,6,torch.load,torch,neural_methods/trainer/PhysnetTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\PhysnetTrainer.py
assignment_unknown,load_state_dict,self.model.load_state_dict(torch.load(last_epoch_model_path)),147,self.model = PhysNet_padding_Encoder_Decoder_MAX(,32,PhysNet_padding_Encoder_Decoder_MAX(frames=config.MODEL.PHYSNET.FRAME_NUM).to.load_state_dict,PhysNet_padding_Encoder_Decoder_MAX(frames=config,neural_methods/trainer/PhysnetTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\PhysnetTrainer.py
import,load,self.model.load_state_dict(torch.load(last_epoch_model_path)),147,import torch,6,torch.load,torch,neural_methods/trainer/PhysnetTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\PhysnetTrainer.py
assignment_unknown,load_state_dict,self.model.load_state_dict(torch.load(best_model_path)),153,self.model = PhysNet_padding_Encoder_Decoder_MAX(,32,PhysNet_padding_Encoder_Decoder_MAX(frames=config.MODEL.PHYSNET.FRAME_NUM).to.load_state_dict,PhysNet_padding_Encoder_Decoder_MAX(frames=config,neural_methods/trainer/PhysnetTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\PhysnetTrainer.py
import,load,self.model.load_state_dict(torch.load(best_model_path)),153,import torch,6,torch.load,torch,neural_methods/trainer/PhysnetTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\PhysnetTrainer.py
assignment_import,load_state_dict,self.model.load_state_dict(torch.load(self.config.INFERENCE.MODEL_PATH)),144,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",48,torch.load_state_dict,torch,neural_methods/trainer/TscanTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\TscanTrainer.py
import,load,self.model.load_state_dict(torch.load(self.config.INFERENCE.MODEL_PATH)),144,import torch,8,torch.load,torch,neural_methods/trainer/TscanTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\TscanTrainer.py
assignment_import,load_state_dict,self.model.load_state_dict(torch.load(last_epoch_model_path)),152,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",48,torch.load_state_dict,torch,neural_methods/trainer/TscanTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\TscanTrainer.py
import,load,self.model.load_state_dict(torch.load(last_epoch_model_path)),152,import torch,8,torch.load,torch,neural_methods/trainer/TscanTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\TscanTrainer.py
assignment_import,load_state_dict,self.model.load_state_dict(torch.load(best_model_path)),158,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",48,torch.load_state_dict,torch,neural_methods/trainer/TscanTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\TscanTrainer.py
import,load,self.model.load_state_dict(torch.load(best_model_path)),158,import torch,8,torch.load,torch,neural_methods/trainer/TscanTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\TscanTrainer.py
