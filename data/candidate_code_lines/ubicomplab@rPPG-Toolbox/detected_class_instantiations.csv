call_name,line_no,class_instantiation,instantiation_line_no,relative_file_path,repository_name,file_path
self.model(data),70,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",34,neural_methods/trainer/DeepPhysTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\DeepPhysTrainer.py
self.model(data),70,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",45,neural_methods/trainer/DeepPhysTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\DeepPhysTrainer.py
self.model(data_valid),116,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",34,neural_methods/trainer/DeepPhysTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\DeepPhysTrainer.py
self.model(data_valid),116,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",45,neural_methods/trainer/DeepPhysTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\DeepPhysTrainer.py
self.model(data_test),163,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",34,neural_methods/trainer/DeepPhysTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\DeepPhysTrainer.py
self.model(data_test),163,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",45,neural_methods/trainer/DeepPhysTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\DeepPhysTrainer.py
self.model(data),80,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",38,neural_methods/trainer/EfficientPhysTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\EfficientPhysTrainer.py
self.model(data),80,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",50,neural_methods/trainer/EfficientPhysTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\EfficientPhysTrainer.py
self.model(data_valid),131,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",38,neural_methods/trainer/EfficientPhysTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\EfficientPhysTrainer.py
self.model(data_valid),131,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",50,neural_methods/trainer/EfficientPhysTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\EfficientPhysTrainer.py
self.model(data_test),183,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",38,neural_methods/trainer/EfficientPhysTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\EfficientPhysTrainer.py
self.model(data_test),183,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",50,neural_methods/trainer/EfficientPhysTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\EfficientPhysTrainer.py
"self.loss_model(rPPG, BVP_label)",69,self.loss_model = Neg_Pearson(),37,neural_methods/trainer/PhysnetTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\PhysnetTrainer.py
"self.loss_model(rPPG, BVP_label)",118,self.loss_model = Neg_Pearson(),37,neural_methods/trainer/PhysnetTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\PhysnetTrainer.py
self.model(data),75,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",37,neural_methods/trainer/TscanTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\TscanTrainer.py
self.model(data),75,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",48,neural_methods/trainer/TscanTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\TscanTrainer.py
self.model(data_valid),123,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",37,neural_methods/trainer/TscanTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\TscanTrainer.py
self.model(data_valid),123,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",48,neural_methods/trainer/TscanTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\TscanTrainer.py
self.model(data_test),172,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",37,neural_methods/trainer/TscanTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\TscanTrainer.py
self.model(data_test),172,"self.model = torch.nn.DataParallel(self.model, device_ids=list(range(config.NUM_OF_GPU_TRAIN)))",48,neural_methods/trainer/TscanTrainer.py,ubicomplab/rPPG-Toolbox,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\ubicomplab@rPPG-Toolbox\neural_methods\trainer\TscanTrainer.py
