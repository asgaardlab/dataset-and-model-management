call_root_type,method_name,method_call,line_no,call_root,call_root_line_no,qualifying_name,call_root_package,relative_file_path,repository_name,file_path
assignment_import,fit_transform,tmpbow = countVectorizer.fit_transform(tokenized_sentences1),22,countVectorizer = CountVectorizer()  # BOW,19.0,sklearn.feature_extraction.text.CountVectorizer.fit_transform,sklearn,Bag of words model/bow.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Bag of words model\bow.py
import,load,arrimg = pygame.image.load('Arrow.png'),110,import pygame,2.0,pygame.image.load,pygame,Bubble Shooter Game/bubbleshooter.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Bubble Shooter Game\bubbleshooter.py
import,load,pygame.mixer.music.load(musclist[0]),172,import pygame,2.0,pygame.mixer.music.load,pygame,Bubble Shooter Game/bubbleshooter.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Bubble Shooter Game\bubbleshooter.py
import,load,pygame.mixer.music.load(musclist[track]),260,import pygame,2.0,pygame.mixer.music.load,pygame,Bubble Shooter Game/bubbleshooter.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Bubble Shooter Game\bubbleshooter.py
assignment_import,fit,model.fit(train),90,"model = auto_arima(train, trace=True,",88.0,pmdarima.auto_arima.fit,pmdarima,corona cases forecasting/main.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\corona cases forecasting\main.py
assignment_import,fit,model_fit = model.fit(disp=0),99,"model = ARIMA(train, order=order)",98.0,statsmodels.tsa.arima_model.ARIMA.fit,statsmodels,corona cases forecasting/main.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\corona cases forecasting\main.py
assignment_import,fit,model.fit(train),160,"model = auto_arima(train, trace=True,",158.0,pmdarima.auto_arima.fit,pmdarima,corona cases forecasting/main.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\corona cases forecasting\main.py
assignment_import,fit,model_fit = model.fit(disp=0),169,"model = ARIMA(train, order=order)",168.0,statsmodels.tsa.arima_model.ARIMA.fit,statsmodels,corona cases forecasting/main.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\corona cases forecasting\main.py
assignment_import,fit,model.fit(train),227,"model = auto_arima(train, trace=True,",225.0,pmdarima.auto_arima.fit,pmdarima,corona cases forecasting/main.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\corona cases forecasting\main.py
assignment_import,fit,model_fit = model.fit(disp=0),236,"model = ARIMA(train, order=order)",235.0,statsmodels.tsa.arima_model.ARIMA.fit,statsmodels,corona cases forecasting/main.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\corona cases forecasting\main.py
import,load_model,model = load_model('model_adv.h5'),85,from tensorflow.keras.models import load_model,9.0,tensorflow.keras.models.load_model,tensorflow,Covid -19-Detection-Using-Chest-X-Ray/test.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Covid -19-Detection-Using-Chest-X-Ray\test.py
import,loads,response = json.loads(requests.get(,146,import json,1.0,json.loads,json,Covid India Stats App/app.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Covid India Stats App\app.py
import,loads,data = json.loads(resp.content),61,import json,5.0,json.loads,json,Crypocurrency-Converter-GUI/main.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Crypocurrency-Converter-GUI\main.py
import,loads,data = json.loads(news.content),12,import json,4.0,json.loads,json,Desktop News Notifier/script.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Desktop News Notifier\script.py
import,load,"self.nlp = spacy.load(""en_core_web_sm"")",8,import spacy,1.0,spacy.load,spacy,Document-Summary-Creator/preprocessing.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Document-Summary-Creator\preprocessing.py
assignment_import,fit,"history = model.fit(aug.flow(training_data, training_target, batch_size=10),",100,model = Sequential(),76.0,tensorflow.keras.models.Sequential.fit,tensorflow,Face-Mask-Detection/face_mask_detection_using_cnn.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Face-Mask-Detection\face_mask_detection_using_cnn.py
import,load,readdata = json.load(file),30,import json,1.0,json.load,json,Github-Automation/logger.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Github-Automation\logger.py
import,load,initdata = json.load(file),55,import json,1.0,json.load,json,Github-Automation/logger.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Github-Automation\logger.py
import,load,credentials = load(token),37,"from pickle import load, dump",7.0,pickle.load,pickle,Google-Meet-Scheduler/script.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Google-Meet-Scheduler\script.py
import,load,"img = pygame.image.load(""./Hangman-Game/hangman"" + str(i) + "".png"")",26,import pygame,1.0,pygame.image.load,pygame,Hangman-Game/main.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Hangman-Game\main.py
import,load,"model = pickle.load(open(""./Heart Disease Prediction/heart_model.pkl"", ""rb""))",39,import pickle,2.0,pickle.load,pickle,Heart Disease Prediction/script.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Heart Disease Prediction\script.py
assignment_import,load,pixels = im.load(),601,"im = Image.open(image_input).convert(""RGB"")",595.0,PIL.Image.load,PIL,Image editor python script/Image_editing_script.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Image editor python script\Image_editing_script.py
import,loads,db = json.loads(data),116,import json,2.0,json.loads,json,Link-Preview/linkPreview.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Link-Preview\linkPreview.py
import,load_model,model = tf.keras.models.load_model(model_path),20,import tensorflow as tf,4.0,tensorflow.keras.models.load_model,tensorflow,Malaria/main.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Malaria\main.py
assignment_import,fit,"history = classifier.fit(X_trainF, y_trainF,",81,classifier = Sequential(),62.0,tensorflow.keras.models.Sequential.fit,tensorflow,Malaria/model_training.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Malaria\model_training.py
import,load,data = json.load(file),56,import json,2.0,json.load,json,Master Script/manual db updater.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Master Script\manual db updater.py
assignment_import,fit_transform,features = cv.fit_transform(x_train),18,cv = CountVectorizer(),17.0,sklearn.feature_extraction.text.CountVectorizer.fit_transform,sklearn,Message-Spam/messagespam.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Message-Spam\messagespam.py
assignment_import,fit,"model.fit(features, y_train)",28,"model = GridSearchCV(svm.SVC(), tuned_parameters)",26.0,sklearn.model_selection.GridSearchCV.fit,sklearn,Message-Spam/messagespam.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Message-Spam\messagespam.py
import,load,loaded_model = joblib.load('filename.pkl'),48,import joblib,6.0,joblib.load,joblib,Message-Spam/messagespam.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Message-Spam\messagespam.py
assignment_import,fit_transform,temp1 = cv.fit_transform(x['final_text'].values.astype('U')).toarray(),24,cv = CountVectorizer(max_features=5000),23.0,sklearn.feature_extraction.text.CountVectorizer.fit_transform,sklearn,Message_Spam_Detection/Message_Spam_Detection.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Message_Spam_Detection\Message_Spam_Detection.py
assignment_import,fit_transform,temp1 = tf.fit_transform(temp1),26,tf = TfidfTransformer(),25.0,sklearn.feature_extraction.text.TfidfTransformer.fit_transform,sklearn,Message_Spam_Detection/Message_Spam_Detection.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Message_Spam_Detection\Message_Spam_Detection.py
assignment_import,fit,"model.fit(x, y)",38,"model = RandomForestClassifier(n_estimators=100, random_state=0)",37.0,sklearn.ensemble.RandomForestClassifier.fit,sklearn,Message_Spam_Detection/Message_Spam_Detection.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Message_Spam_Detection\Message_Spam_Detection.py
import,load,mixer.music.load(play_it),73,from pygame import mixer,10.0,pygame.mixer.music.load,pygame,Music-Player-App/main.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Music-Player-App\main.py
import,loads,self._json = json.loads(response.content),19,import json,1.0,json.loads,json,Pagespeed-API/responses.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Pagespeed-API\responses.py
import,fit_transform,def vectorize(Text): return TfidfVectorizer().fit_transform(Text).toarray(),11,from sklearn.feature_extraction.text import TfidfVectorizer,4.0,sklearn.feature_extraction.text.TfidfVectorizer.().fit_transform,sklearn,Plagiarism-Checker/plagiarism.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Plagiarism-Checker\plagiarism.py
import,load,"pygame.mixer.music.load(""./Pomodoro_GUI/beep.wav"")",163,import pygame,4.0,pygame.mixer.music.load,pygame,Pomodoro_GUI/Pomodoro_gui.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Pomodoro_GUI\Pomodoro_gui.py
import,load,"pygame.mixer.music.load(""./Pomodoro_GUI/beep.wav"")",218,import pygame,4.0,pygame.mixer.music.load,pygame,Pomodoro_GUI/Pomodoro_gui.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Pomodoro_GUI\Pomodoro_gui.py
import,load,"ball_image = pygame.image.load(""Assets/ball.png"")",16,import pygame,1.0,pygame.image.load,pygame,pong-pygame/pong.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\pong-pygame\pong.py
import,load,"paddle_image = pygame.image.load(""Assets/paddle.png"")",17,import pygame,1.0,pygame.image.load,pygame,pong-pygame/pong.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\pong-pygame\pong.py
import,load,img0 = pygame.image.load(path),71,import pygame,3.0,pygame.image.load,pygame,Pygame-Buttons/ExampleButtons.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Pygame-Buttons\ExampleButtons.py
import,loads,data = json.loads(source),283,import json,7.0,json.loads,json,Quiz-GUI/quiztime.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Quiz-GUI\quiztime.py
import,load,data = json.load(f),34,import json,6.0,json.load,json,Reddit-Meme-Scraper/script.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Reddit-Meme-Scraper\script.py
import,load,data = json.load(f),41,import json,6.0,json.load,json,Reddit-Meme-Scraper/script.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Reddit-Meme-Scraper\script.py
assignment_import,fit,"gs.fit(X_train, y_train)",42,"gs = GridSearchCV(regressor, param_grid=parameters,",40.0,sklearn.model_selection.GridSearchCV.fit,sklearn,Salary Predictor/model.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Salary Predictor\model.py
import,load,random_forest_model = pickle.load(f),72,import pickle,3.0,pickle.load,pickle,Salary Predictor/script.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Salary Predictor\script.py
import,load,model_columns = pickle.load(f),76,import pickle,3.0,pickle.load,pickle,Salary Predictor/script.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Salary Predictor\script.py
import,load,"spaceshipImageYellow = pygame.image.load(os.path.join(""Assets"", ""Yellow_Spaceship.png""))",14,import pygame,1.0,pygame.image.load,pygame,Spaceship_Game/utility.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Spaceship_Game\utility.py
import,load,"spaceshipImageRed = pygame.image.load(os.path.join(""Assets"", ""Red_Spaceship.png""))",15,import pygame,1.0,pygame.image.load,pygame,Spaceship_Game/utility.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Spaceship_Game\utility.py
import,load,"SPACE = pygame.image.load(os.path.join(""Assets"", ""space.jpg""))",16,import pygame,1.0,pygame.image.load,pygame,Spaceship_Game/utility.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Spaceship_Game\utility.py
import,load,image = pygame.image.load('grid.gif'),19,import pygame,2.0,pygame.image.load,pygame,Sudoku-Solver-And-Vizualizer/Solve_viz.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Sudoku-Solver-And-Vizualizer\Solve_viz.py
import,load,image_fill = pygame.image.load('fill.gif'),20,import pygame,2.0,pygame.image.load,pygame,Sudoku-Solver-And-Vizualizer/Solve_viz.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Sudoku-Solver-And-Vizualizer\Solve_viz.py
assignment_unknown,fit,"H = model.fit(train_X_ext, train_Y, epochs=1, batch_size=BATCH_SIZE)",284,"model = build(28, 28, 1, 43)",240.0,build.fit,build,Traffic-Sign-Detection/traffic_sign_detection.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Traffic-Sign-Detection\traffic_sign_detection.py
import,load,meeting_data = json.load(stored_data),36,import json,1.0,json.load,json,Zoom-Auto-Attend/zoomzoom.py,avinashkranjan/Amazing-Python-Scripts,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\avinashkranjan@Amazing-Python-Scripts\Zoom-Auto-Attend\zoomzoom.py
