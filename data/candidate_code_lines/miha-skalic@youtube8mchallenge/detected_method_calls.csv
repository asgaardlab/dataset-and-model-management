call_root_type,method_name,method_call,line_no,call_root,call_root_line_no,qualifying_name,call_root_package,relative_file_path,repository_name,file_path
import,loads,json_data = json.loads(line),96,import json,21.0,json.loads,json,convert_prediction_from_json_to_csv.py,miha-skalic/youtube8mchallenge,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\miha-skalic@youtube8mchallenge\convert_prediction_from_json_to_csv.py
assignment_unknown,load,"destination_t.load(ema_source, session=sess)",252,destination_t = destination_t[0],249.0,destination_t[0].load,destination_t[0],eval.py,miha-skalic/youtube8mchallenge,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\miha-skalic@youtube8mchallenge\eval.py
import,loads,flags_dict = json.loads(open(model_flags_path).read()),355,import json,17.0,json.loads,json,eval.py,miha-skalic/youtube8mchallenge,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\miha-skalic@youtube8mchallenge\eval.py
import,loads,flags_dict = json.loads(open(model_flags_path).read()),112,import json,2.0,json.loads,json,eval_custom.py,miha-skalic/youtube8mchallenge,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\miha-skalic@youtube8mchallenge\eval_custom.py
import,loads,flags_dict = json.loads(open(flags_dict_file).read()),204,import json,19.0,json.loads,json,inference.py,miha-skalic/youtube8mchallenge,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\miha-skalic@youtube8mchallenge\inference.py
import,loads,flags_dict = json.loads(open(flags_dict_file).read()),204,import json,19.0,json.loads,json,inference_gpu.py,miha-skalic/youtube8mchallenge,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\miha-skalic@youtube8mchallenge\inference_gpu.py
import,loads,flags_dict = json.loads(open(model_flags_path).read()),153,import json,26.0,json.loads,json,prepare_distill_dataset.py,miha-skalic/youtube8mchallenge,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\miha-skalic@youtube8mchallenge\prepare_distill_dataset.py
assignment_import,fit,"km_pred.fit(c_np[:, np.newaxis].astype(np.float64))",115,"km_pred = KMeans(n_clusters=256, n_jobs=-1)",113.0,sklearn.cluster.KMeans.fit,sklearn,quantize.py,miha-skalic/youtube8mchallenge,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\miha-skalic@youtube8mchallenge\quantize.py
,load,"load_dest.load(np_val, session=sess)",156,,,load_dest.load,load_dest,quantize.py,miha-skalic/youtube8mchallenge,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\miha-skalic@youtube8mchallenge\quantize.py
import,load,existing_flags = json.load(open(flags_json_path)),438,import json,16.0,json.load,json,train.py,miha-skalic/youtube8mchallenge,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\miha-skalic@youtube8mchallenge\train.py
,load,"xtensor.load(src_tensor, session=sess)",496,,,xtensor.load,xtensor,train.py,miha-skalic/youtube8mchallenge,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\miha-skalic@youtube8mchallenge\train.py
,load,"ematensor.load(src_tensor, session=sess)",497,,,ematensor.load,ematensor,train.py,miha-skalic/youtube8mchallenge,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\miha-skalic@youtube8mchallenge\train.py
import,loads,"env = json.loads(os.environ.get(""TF_CONFIG"", ""{}""))",729,import json,16.0,json.loads,json,train.py,miha-skalic/youtube8mchallenge,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\miha-skalic@youtube8mchallenge\train.py
import,load,existing_flags = json.load(open(flags_json_path)),438,import json,16.0,json.load,json,train_distill.py,miha-skalic/youtube8mchallenge,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\miha-skalic@youtube8mchallenge\train_distill.py
,load,"xtensor.load(src_tensor, session=sess)",496,,,xtensor.load,xtensor,train_distill.py,miha-skalic/youtube8mchallenge,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\miha-skalic@youtube8mchallenge\train_distill.py
,load,"ematensor.load(src_tensor, session=sess)",497,,,ematensor.load,ematensor,train_distill.py,miha-skalic/youtube8mchallenge,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\miha-skalic@youtube8mchallenge\train_distill.py
import,loads,"env = json.loads(os.environ.get(""TF_CONFIG"", ""{}""))",727,import json,16.0,json.loads,json,train_distill.py,miha-skalic/youtube8mchallenge,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\miha-skalic@youtube8mchallenge\train_distill.py
import,load,self.pca_mean = numpy.load(,153,import numpy,19.0,numpy.load,numpy,feature_extractor/feature_extractor.py,miha-skalic/youtube8mchallenge,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\miha-skalic@youtube8mchallenge\feature_extractor\feature_extractor.py
import,load,self.pca_eigenvals = numpy.load(,155,import numpy,19.0,numpy.load,numpy,feature_extractor/feature_extractor.py,miha-skalic/youtube8mchallenge,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\miha-skalic@youtube8mchallenge\feature_extractor\feature_extractor.py
import,load,self.pca_eigenvecs = numpy.load(,157,import numpy,19.0,numpy.load,numpy,feature_extractor/feature_extractor.py,miha-skalic/youtube8mchallenge,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\miha-skalic@youtube8mchallenge\feature_extractor\feature_extractor.py
import,load,sports_1m_test_data = cPickle.load(open(_FilePath('sports1m_frame.pkl'))),44,from six.moves import cPickle,21.0,six.moves.cPickle.load,six,feature_extractor/feature_extractor_test.py,miha-skalic/youtube8mchallenge,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\miha-skalic@youtube8mchallenge\feature_extractor\feature_extractor_test.py
