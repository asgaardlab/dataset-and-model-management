call_root_type,method_name,method_call,line_no,call_root,call_root_line_no,qualifying_name,call_root_package,relative_file_path,repository_name,file_path
import,load,return cloudpickle.load(handles.handle)  # type: ignore[arg-type],146,import cloudpickle,7.0,cloudpickle.load,cloudpickle,lineapy/api/api_utils.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\lineapy\api\api_utils.py
import,load,return pickle.load(handles.handle)  # type: ignore[arg-type],148,import pickle,2.0,pickle.load,pickle,lineapy/api/api_utils.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\lineapy\api\api_utils.py
import,load,_read_config = json.load(f),125,import json,2.0,json.load,json,lineapy/utils/config.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\lineapy\utils\config.py
import,load,_read_config = json.load(f),135,import json,2.0,json.load,json,lineapy/utils/config.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\lineapy\utils\config.py
import,loads,env_var_value = json.loads(env_var_value),147,import json,2.0,json.loads,json,lineapy/utils/config.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\lineapy\utils\config.py
assignment_import,fit,"clf.fit(x, y)",26,clf = RandomForestClassifier(random_state=0),22.0,sklearn.ensemble.RandomForestClassifier.fit,sklearn,tests/housing.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\housing.py
import,load,assert pickle.load(f) == 42,49,import pickle,1.0,pickle.load,pickle,tests/test_api.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\test_api.py
import,load,generated_config = json.load(f),88,import json,1.0,json.load,json,tests/test_mlflow.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\test_mlflow.py
import,load,generated_config = json.load(f),52,import json,2.0,json.load,json,tests/test_script.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\test_script.py
import,load,generated_config = json.load(f),69,import json,2.0,json.load,json,tests/test_script.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\test_script.py
import,load,generated_config = json.load(f),84,import json,2.0,json.load,json,tests/test_script.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\test_script.py
import,load,generated_config = json.load(f),92,import json,2.0,json.load,json,tests/test_script.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\test_script.py
import,load,generated_config = json.load(f),101,import json,2.0,json.load,json,tests/test_script.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\test_script.py
import,load,generated_config = json.load(f),110,import json,2.0,json.load,json,tests/test_script.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\test_script.py
assignment_import,fit,"clf.fit(x, y)",15,clf = RandomForestClassifier(random_state=0),12.0,sklearn.ensemble.RandomForestClassifier.fit,sklearn,tests/end_to_end/__snapshots__/test_misc/TestEndToEnd.test_housing.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\end_to_end\__snapshots__\test_misc\TestEndToEnd.test_housing.py
assignment_import,fit,results = model.fit(),21,"model = sm.OLS(yi, Z)",20.0,statsmodels.api.fit,statsmodels,tests/integration/slices/numpy_mooreslaw.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\slices\numpy_mooreslaw.py
assignment_import,fit,"X_features = combined_features.fit(X, y).transform(X)",21,"combined_features = FeatureUnion([(""pca"", pca), (""univ_select"", selection)])",20.0,sklearn.pipeline.FeatureUnion.fit,sklearn,tests/integration/slices/sklearn_compose_plot_feature_union.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\slices\sklearn_compose_plot_feature_union.py
assignment_import,fit,"grid_search.fit(X, y)",30,"grid_search = GridSearchCV(pipeline, param_grid=param_grid, verbose=10)",29.0,sklearn.model_selection.GridSearchCV.fit,sklearn,tests/integration/slices/sklearn_compose_plot_feature_union.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\slices\sklearn_compose_plot_feature_union.py
,fit,estimator.fit(X),59,,,estimator.fit,estimator,tests/integration/slices/sklearn_mixture_plot_concentration_prior.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\slices\sklearn_mixture_plot_concentration_prior.py
assignment_import,fit,"grid_search.fit(X, y)",22,"grid_search = GridSearchCV(clf, param_grid=param_grid)",21.0,sklearn.model_selection.GridSearchCV.fit,sklearn,tests/integration/slices/sklearn_model_selection_plot_randomized_search.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\slices\sklearn_model_selection_plot_randomized_search.py
,fit,"chain.fit(X_train, Y_train)",20,,,chain.fit,chain,tests/integration/slices/sklearn_multioutput_plot_classifier_chain_yeast.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\slices\sklearn_multioutput_plot_classifier_chain_yeast.py
assignment_import,fit,"unscaled_clf.fit(X_train, y_train)",22,"unscaled_clf = make_pipeline(PCA(n_components=2), GaussianNB())",21.0,sklearn.pipeline.make_pipeline.fit,sklearn,tests/integration/slices/sklearn_preprocessing_plot_scaling_importance.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\slices\sklearn_preprocessing_plot_scaling_importance.py
assignment_import,fit,"std_clf.fit(X_train, y_train)",24,"std_clf = make_pipeline(StandardScaler(), PCA(n_components=2), GaussianNB())",23.0,sklearn.pipeline.make_pipeline.fit,sklearn,tests/integration/slices/sklearn_preprocessing_plot_scaling_importance.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\slices\sklearn_preprocessing_plot_scaling_importance.py
assignment_import,fit,"label_spread.fit(X, labels)",20,"label_spread = LabelSpreading(kernel=""knn"", alpha=0.8)",19.0,sklearn.semi_supervised.LabelSpreading.fit,sklearn,tests/integration/slices/sklearn_semi_supervised_plot_label_propagation_structure.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\slices\sklearn_semi_supervised_plot_label_propagation_structure.py
assignment_import,fit,"clf.fit(X_train, y_train)",21,"clf = DecisionTreeClassifier(random_state=0, ccp_alpha=ccp_alpha)",20.0,sklearn.tree.DecisionTreeClassifier.fit,sklearn,tests/integration/slices/sklearn_tree_plot_cost_complexity_pruning.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\slices\sklearn_tree_plot_cost_complexity_pruning.py
assignment_import,fit,model_1.fit(x=train_ds),38,model_1 = tfdf.keras.RandomForestModel(),35.0,tensorflow_decision_forests.fit,tensorflow_decision_forests,tests/integration/slices/tensorflow_decision_forests_beginner.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\slices\tensorflow_decision_forests_beginner.py
assignment_import,fit,"history = model.fit(train_ds, validation_data=val_ds, epochs=epochs)",65,model = Sequential(,45.0,tensorflow.keras.models.Sequential.fit,tensorflow,tests/integration/slices/tensorflow_image_classification.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\slices\tensorflow_image_classification.py
assignment_import,fit,"history = model.fit(train_ds, validation_data=val_ds, epochs=epochs)",95,model = Sequential(,73.0,tensorflow.keras.models.Sequential.fit,tensorflow,tests/integration/slices/tensorflow_image_classification.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\slices\tensorflow_image_classification.py
assignment_unknown,fit,"titanic_model.fit(x=titanic_features_dict, y=titanic_labels, epochs=10)",67,"titanic_model = titanic_model(titanic_preprocessing, inputs)",66.0,titanic_model.fit,titanic_model,tests/integration/slices/tensorflow_load_csv.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\slices\tensorflow_load_csv.py
assignment_import,fit,"model.fit(train_ds, epochs=10, validation_data=val_ds)",105,"model = tf.keras.Model(all_inputs, output)",99.0,tensorflow.fit,tensorflow,tests/integration/slices/tensorflow_preprocessing_layers.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\slices\tensorflow_preprocessing_layers.py
assignment_unknown,fit,history = dnn_model.fit(,55,dnn_model = build_and_compile_model(normalizer),54.0,build_and_compile_model.fit,build_and_compile_model,tests/integration/slices/tensorflow_regression.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\slices\tensorflow_regression.py
assignment_import,fit,history = model.fit(,63,model = tf.keras.Sequential(,52.0,tensorflow.fit,tensorflow,tests/integration/slices/tensorflow_transfer_hub.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\slices\tensorflow_transfer_hub.py
import,loads,bst3 = pickle.loads(pks),49,import pickle,15.0,pickle.loads,pickle,tests/integration/slices/xgboost_basic_walkthrough.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\slices\xgboost_basic_walkthrough.py
assignment_import,fit,"clf.fit(X, y)",30,clf = GridSearchCV(,24.0,sklearn.model_selection.GridSearchCV.fit,sklearn,tests/integration/slices/xgboost_sklearn_examples.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\slices\xgboost_sklearn_examples.py
assignment_import,fit,results = model.fit(),13,"model = sm.OLS(yi, Z)",12.0,statsmodels.api.fit,statsmodels,tests/integration/__snapshots__/test_slice/test_slice[numpy_mooreslaw].py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\__snapshots__\test_slice\test_slice[numpy_mooreslaw].py
import,load,dumped_scripted_predictor = torch.jit.load(f.name),42,import torch,2.0,torch.jit.load,torch,tests/integration/__snapshots__/test_slice/test_slice[pytorch_vision_tensor_transform].py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\__snapshots__\test_slice\test_slice[pytorch_vision_tensor_transform].py
assignment_import,fit,"X_features = combined_features.fit(X, y).transform(X)",13,"combined_features = FeatureUnion([(""pca"", pca), (""univ_select"", selection)])",12.0,sklearn.pipeline.FeatureUnion.fit,sklearn,tests/integration/__snapshots__/test_slice/test_slice[sklearn_compose_plot_feature_union].py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\__snapshots__\test_slice\test_slice[sklearn_compose_plot_feature_union].py
assignment_import,fit,"grid_search.fit(X, y)",22,"grid_search = GridSearchCV(pipeline, param_grid=param_grid, verbose=10)",21.0,sklearn.model_selection.GridSearchCV.fit,sklearn,tests/integration/__snapshots__/test_slice/test_slice[sklearn_compose_plot_feature_union].py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\__snapshots__\test_slice\test_slice[sklearn_compose_plot_feature_union].py
,fit,estimator.fit(X),107,,,estimator.fit,estimator,tests/integration/__snapshots__/test_slice/test_slice[sklearn_mixture_plot_concentration_prior].py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\__snapshots__\test_slice\test_slice[sklearn_mixture_plot_concentration_prior].py
assignment_import,fit,"grid_search.fit(X, y)",14,"grid_search = GridSearchCV(clf, param_grid=param_grid)",13.0,sklearn.model_selection.GridSearchCV.fit,sklearn,tests/integration/__snapshots__/test_slice/test_slice[sklearn_model_selection_plot_randomized_search].py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\__snapshots__\test_slice\test_slice[sklearn_model_selection_plot_randomized_search].py
,fit,"chain.fit(X_train, Y_train)",12,,,chain.fit,chain,tests/integration/__snapshots__/test_slice/test_slice[sklearn_multioutput_plot_classifier_chain_yeast].py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\__snapshots__\test_slice\test_slice[sklearn_multioutput_plot_classifier_chain_yeast].py
assignment_import,fit,"unscaled_clf.fit(X_train, y_train)",14,"unscaled_clf = make_pipeline(PCA(n_components=2), GaussianNB())",13.0,sklearn.pipeline.make_pipeline.fit,sklearn,tests/integration/__snapshots__/test_slice/test_slice[sklearn_preprocessing_plot_scaling_importance].py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\__snapshots__\test_slice\test_slice[sklearn_preprocessing_plot_scaling_importance].py
assignment_import,fit,"std_clf.fit(X_train, y_train)",16,"std_clf = make_pipeline(StandardScaler(), PCA(n_components=2), GaussianNB())",15.0,sklearn.pipeline.make_pipeline.fit,sklearn,tests/integration/__snapshots__/test_slice/test_slice[sklearn_preprocessing_plot_scaling_importance].py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\__snapshots__\test_slice\test_slice[sklearn_preprocessing_plot_scaling_importance].py
assignment_import,fit,"label_spread.fit(X, labels)",12,"label_spread = LabelSpreading(kernel=""knn"", alpha=0.8)",11.0,sklearn.semi_supervised.LabelSpreading.fit,sklearn,tests/integration/__snapshots__/test_slice/test_slice[sklearn_semi_supervised_plot_label_propagation_structure].py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\__snapshots__\test_slice\test_slice[sklearn_semi_supervised_plot_label_propagation_structure].py
assignment_import,fit,"clf.fit(X_train, y_train)",13,"clf = DecisionTreeClassifier(random_state=0, ccp_alpha=ccp_alpha)",12.0,sklearn.tree.DecisionTreeClassifier.fit,sklearn,tests/integration/__snapshots__/test_slice/test_slice[sklearn_tree_plot_cost_complexity_pruning].py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\__snapshots__\test_slice\test_slice[sklearn_tree_plot_cost_complexity_pruning].py
assignment_import,fit,"model.fit(train_ds, epochs=10, validation_data=val_ds)",97,"model = tf.keras.Model(all_inputs, output)",91.0,tensorflow.fit,tensorflow,tests/integration/__snapshots__/test_slice/test_slice[tensorflow_preprocessing_layers].py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\__snapshots__\test_slice\test_slice[tensorflow_preprocessing_layers].py
assignment_import,fit,history = model.fit(,55,model = tf.keras.Sequential(,44.0,tensorflow.fit,tensorflow,tests/integration/__snapshots__/test_slice/test_slice[tensorflow_transfer_hub].py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\integration\__snapshots__\test_slice\test_slice[tensorflow_transfer_hub].py
assignment_import,fit,"clf.fit(x, y)",17,clf = RandomForestClassifier(random_state=0),14.0,sklearn.ensemble.RandomForestClassifier.fit,sklearn,tests/outputs/expected/sliced_housing_multiple.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\outputs\expected\sliced_housing_multiple.py
assignment_import,fit,"clf.fit(x, y)",17,clf = RandomForestClassifier(random_state=0),14.0,sklearn.ensemble.RandomForestClassifier.fit,sklearn,tests/outputs/expected/sliced_housing_multiple_w_dependencies.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\outputs\expected\sliced_housing_multiple_w_dependencies.py
assignment_import,fit,"clf.fit(x, y)",17,clf = RandomForestClassifier(random_state=0),14.0,sklearn.ensemble.RandomForestClassifier.fit,sklearn,tests/outputs/expected/sliced_housing_simple.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\outputs\expected\sliced_housing_simple.py
import,load,content_generated = pickle.load(fp),108,import pickle,1.0,pickle.load,pickle,tests/unit/plugins/test_pipeline_tests.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\unit\plugins\test_pipeline_tests.py
import,load,content_expected = pickle.load(fp),110,import pickle,1.0,pickle.load,pickle,tests/unit/plugins/test_pipeline_tests.py,LineaLabs/lineapy,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\LineaLabs@lineapy\tests\unit\plugins\test_pipeline_tests.py
