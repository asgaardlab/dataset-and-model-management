call_root_type,method_name,method_call,line_no,call_root,call_root_line_no,qualifying_name,call_root_package,relative_file_path,repository_name,file_path
assignment_unknown,fit_transform,W = init_NMF_model.fit_transform(B),270,"init_NMF_model = center_NMF(n_components=n_components, random_seed=random_seed, dissimilarity=dissimilarity)",269,center_NMF.fit_transform,center_NMF,spateo/alignment/methods/paste.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\alignment\methods\paste.py
assignment_unknown,fit_transform,W = NMF_model.fit_transform(B),311,"NMF_model = center_NMF(n_components, random_seed, dissimilarity=dissimilarity)",304,center_NMF.fit_transform,center_NMF,spateo/alignment/methods/paste.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\alignment\methods\paste.py
import,load,labels = np.load(labels),331,import numpy as np,9,numpy.load,numpy,spateo/io/bgi.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\io\bgi.py
import,load,"labels = np.load(path)[""labels""]",43,import numpy as np,5,numpy.load,numpy,spateo/io/starmap.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\io\starmap.py
assignment_import,fit,fit = pca.fit(adata.X.toarray()) if scipy.sparse.issparse(adata.X) else pca.fit(adata.X),1973,pca = PCA(,1968,sklearn.decomposition.PCA.fit,sklearn,spateo/plotting/static/utils.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\plotting\static\utils.py
assignment_import,fit,fit = pca.fit(adata.X.toarray()) if scipy.sparse.issparse(adata.X) else pca.fit(adata.X),1973,pca = PCA(,1968,sklearn.decomposition.PCA.fit,sklearn,spateo/plotting/static/utils.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\plotting\static\utils.py
import,fit,"pc_kde = KernelDensity(kernel=kernel, bandwidth=bandwidth).fit(coords).score_samples(coords)",109,from sklearn.neighbors import KernelDensity,5,"sklearn.neighbors.KernelDensity.(kernel=kernel, bandwidth=bandwidth).fit",sklearn,spateo/tdr/morphometrics/morphology.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tdr\morphometrics\morphology.py
assignment_import,fit,"pca_project.fit(new_X, nodes=NumNodes, **PrinCurve_kwargs)",232,pca_project = NLPCA(),229,tree.NLPCA.fit,tree,spateo/tdr/widgets/changes.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tdr\widgets\changes.py
custom_function,load,"self.h, self.A, self.B = self.load()",102,def load(self):,333,load.self,load,spateo/tdr/widgets/deep_interpolation.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tdr\widgets\deep_interpolation.py
custom_function,load,self.h = self.load(),104,def load(self):,333,load.self,load,spateo/tdr/widgets/deep_interpolation.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tdr\widgets\deep_interpolation.py
import,load,"h = torch.load(self.buffer_path + ""/h"")",334,import torch,9,torch.load,torch,spateo/tdr/widgets/deep_interpolation.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tdr\widgets\deep_interpolation.py
import,load,"A = torch.load(self.buffer_path + ""/A"")",336,import torch,9,torch.load,torch,spateo/tdr/widgets/deep_interpolation.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tdr\widgets\deep_interpolation.py
import,load,"B = torch.load(self.buffer_path + ""/B"")",337,import torch,9,torch.load,torch,spateo/tdr/widgets/deep_interpolation.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tdr\widgets\deep_interpolation.py
assignment_unknown,fit,"model.fit(data, data, epochs=epochs, verbose=verbose)",267,"model = self.create_model(num_dim, nodes=nodes, lr=lr)",259,self.create_model.fit,self,spateo/tdr/widgets/tree.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tdr\widgets\tree.py
import,fit,"xynbrs = NearestNeighbors(n_neighbors=k, algorithm=""auto"", metric=""euclidean"").fit(xymap)",74,from sklearn.neighbors import NearestNeighbors,12,"sklearn.neighbors.NearestNeighbors.(n_neighbors=k, algorithm='auto', metric='euclidean').fit",sklearn,spateo/tools/cluster_degs.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tools\cluster_degs.py
assignment_import,fit,pca.fit(X),190,pca = PCA(n_components=X.shape[1]),189,sklearn.decomposition.PCA.fit,sklearn,spateo/tools/coarse_align.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tools\coarse_align.py
assignment_import,fit,fit = pca.fit(adata.X.toarray()) if scipy.sparse.issparse(adata.X) else pca.fit(adata.X),226,pca = PCA(,221,sklearn.decomposition.PCA.fit,sklearn,spateo/tools/find_neighbors.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tools\find_neighbors.py
assignment_import,fit,fit = pca.fit(adata.X.toarray()) if scipy.sparse.issparse(adata.X) else pca.fit(adata.X),226,pca = PCA(,221,sklearn.decomposition.PCA.fit,sklearn,spateo/tools/find_neighbors.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tools\find_neighbors.py
import,fit,nbrs = NearestNeighbors(algorithm=n_neighbors_method).fit(X_data),240,from sklearn.neighbors import NearestNeighbors,15,sklearn.neighbors.NearestNeighbors.(algorithm=n_neighbors_method).fit,sklearn,spateo/tools/find_neighbors.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tools\find_neighbors.py
import,fit,nbrs = NearestNeighbors(algorithm=method).fit(locations),347,from sklearn.neighbors import NearestNeighbors,15,sklearn.neighbors.NearestNeighbors.(algorithm=method).fit,sklearn,spateo/tools/find_neighbors.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tools\find_neighbors.py
import,fit,"nb2_full = sm.GLM(data[""expression""], transformed_x, family=nb2_family).fit()",141,import statsmodels.api as sm,7,"statsmodels.api.GLM(data['expression'], transformed_x, family=nb2_family).fit",statsmodels,spateo/tools/glm.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tools\glm.py
import,fit,"nb2_null = sm.GLM(data[""expression""], transformed_x_null, family=nb2_family).fit()",142,import statsmodels.api as sm,7,"statsmodels.api.GLM(data['expression'], transformed_x_null, family=nb2_family).fit",statsmodels,spateo/tools/glm.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tools\glm.py
assignment_import,fit_predict,y_pred = kmeans.fit_predict(features.detach().numpy()),400,"kmeans = KMeans(self.n_clusters, n_init=20)",397,sklearn.cluster.KMeans.fit_predict,sklearn,spateo/tools/cluster/spagcn_utils.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tools\cluster\spagcn_utils.py
assignment_import,fit_predict,y_pred = kmeans.fit_predict(X)  # Here we use X as numpy,403,"kmeans = KMeans(self.n_clusters, n_init=20)",397,sklearn.cluster.KMeans.fit_predict,sklearn,spateo/tools/cluster/spagcn_utils.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tools\cluster\spagcn_utils.py
assignment_import,fit_predict,y_pred = kmeans.fit_predict(features.detach().numpy()),535,"kmeans = KMeans(self.n_clusters, n_init=20)",532,sklearn.cluster.KMeans.fit_predict,sklearn,spateo/tools/cluster/spagcn_utils.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tools\cluster\spagcn_utils.py
assignment_import,fit_predict,y_pred = kmeans.fit_predict(X)  # Here we use X as numpy,538,"kmeans = KMeans(self.n_clusters, n_init=20)",532,sklearn.cluster.KMeans.fit_predict,sklearn,spateo/tools/cluster/spagcn_utils.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tools\cluster\spagcn_utils.py
assignment_import,fit,pca.fit(adata.X.A),652,pca = PCA(n_components=self.num_pcs),650,sklearn.decomposition.PCA.fit,sklearn,spateo/tools/cluster/spagcn_utils.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tools\cluster\spagcn_utils.py
assignment_import,fit,pca.fit(adata.X),655,pca = PCA(n_components=self.num_pcs),650,sklearn.decomposition.PCA.fit,sklearn,spateo/tools/cluster/spagcn_utils.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tools\cluster\spagcn_utils.py
assignment_import,fit,self.model.fit(,663,"self.model = simple_GC_DEC(embed.shape[1], embed.shape[1])",662,torch.nn.fit,torch,spateo/tools/cluster/spagcn_utils.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tools\cluster\spagcn_utils.py
assignment_import,fit_transform,pcs = pca.fit_transform(matrix),38,"pca = PCA(n_components=None, random_state=random_state)",37,sklearn.decomposition.PCA.fit_transform,sklearn,spateo/tools/cluster/utils.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tools\cluster\utils.py
assignment_import,fit_transform,pcs = pca.fit_transform(matrix),115,"pca = PCA(n_components=n_pca_components, random_state=random_state)",114,sklearn.decomposition.PCA.fit_transform,sklearn,spateo/tools/cluster/utils.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tools\cluster\utils.py
custom_function,fit,"yhat = self.fit(X, y).predict(X)",581,"def fit(self, X: np.ndarray, y: np.ndarray):",713,fit.self,fit,spateo/tools/ST_regression/generalized_lm.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tools\ST_regression\generalized_lm.py
assignment_import,fit,"glm.fit(X[train], y[train])",771,glm = GLM(,743,sklearn.base.BaseEstimator.fit,sklearn,spateo/tools/ST_regression/generalized_lm.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tools\ST_regression\generalized_lm.py
assignment_import,fit,"glm.fit(X, y)",783,glm = GLM(,743,sklearn.base.BaseEstimator.fit,sklearn,spateo/tools/ST_regression/generalized_lm.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tools\ST_regression\generalized_lm.py
custom_function,fit,"self.fit(X, y)",832,"def fit(self, X: np.ndarray, y: np.ndarray):",713,fit.self,fit,spateo/tools/ST_regression/generalized_lm.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tools\ST_regression\generalized_lm.py
assignment_import,fit,"grid.fit(X, y)",959,"grid = GridSearchCV(estimator=reg, param_grid=gs_params, cv=n_gs_cv)",958,sklearn.model_selection.GridSearchCV.fit,sklearn,spateo/tools/ST_regression/generalized_lm.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tools\ST_regression\generalized_lm.py
assignment_import,fit_predict,"rex = reg.fit_predict(X, y)",975,reg = GLMCV(**kwargs),973,sklearn.base.BaseEstimator.fit_predict,sklearn,spateo/tools/ST_regression/generalized_lm.py,aristoteleo/spateo-release,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\aristoteleo@spateo-release\spateo\tools\ST_regression\generalized_lm.py
