call_root_type,method_name,method_call,line_no,call_root,call_root_line_no,qualifying_name,call_root_package,relative_file_path,repository_name,file_path
assignment_unknown,load,self._model = self._preprocess.load(self._get_local_model_file()),100,self._preprocess = Preprocess(),95,Preprocess.load,Preprocess,clearml_serving/serving/preprocess_service.py,allegroai/clearml-serving,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\allegroai@clearml-serving\clearml_serving\serving\preprocess_service.py
import,load,self._model = joblib.load(filename=self._get_local_model_file()),430,import joblib  # noqa,429,joblib.load,joblib,clearml_serving/serving/preprocess_service.py,allegroai/clearml-serving,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\allegroai@clearml-serving\clearml_serving\serving\preprocess_service.py
assignment_import,load_model,self._model.load_model(self._get_local_model_file()),449,self._model = xgboost.Booster(),448,xgboost.load_model,xgboost,clearml_serving/serving/preprocess_service.py,allegroai/clearml-serving,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\allegroai@clearml-serving\clearml_serving\serving\preprocess_service.py
import,loads,"list_data = json.loads(message.value.decode(""utf-8""))",246,import json,1,json.loads,json,clearml_serving/statistics/metrics.py,allegroai/clearml-serving,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\allegroai@clearml-serving\clearml_serving\statistics\metrics.py
import,load,self._model = joblib.load(local_file_name),37,import joblib,3,joblib.load,joblib,examples/custom/preprocess.py,allegroai/clearml-serving,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\allegroai@clearml-serving\examples\custom\preprocess.py
assignment_import,fit,"model.fit(X, y)",12,model = LogisticRegression(),11,sklearn.linear_model.LogisticRegression.fit,sklearn,examples/custom/train_model.py,allegroai/clearml-serving,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\allegroai@clearml-serving\examples\custom\train_model.py
assignment_import,fit,"knn.fit(X, y)",14,knn = KNeighborsRegressor(n_neighbors=5),13,sklearn.neighbors.KNeighborsRegressor.fit,sklearn,examples/ensemble/train_ensemble.py,allegroai/clearml-serving,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\allegroai@clearml-serving\examples\ensemble\train_ensemble.py
assignment_import,fit,"rf.fit(X, y)",17,rf = RandomForestRegressor(n_estimators=50),16,sklearn.ensemble.RandomForestRegressor.fit,sklearn,examples/ensemble/train_ensemble.py,allegroai/clearml-serving,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\allegroai@clearml-serving\examples\ensemble\train_ensemble.py
assignment_import,fit,"ensemble.fit(X, y)",21,ensemble = VotingRegressor(estimators),20,sklearn.ensemble.VotingRegressor.fit,sklearn,examples/ensemble/train_ensemble.py,allegroai/clearml-serving,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\allegroai@clearml-serving\examples\ensemble\train_ensemble.py
assignment_import,load_weights,"model.load_weights(os.path.join(output_folder, 'weight.1.hdf5'))",108,model = Sequential(),70,tensorflow.keras.models.Sequential.load_weights,tensorflow,examples/keras/train_keras_mnist.py,allegroai/clearml-serving,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\allegroai@clearml-serving\examples\keras\train_keras_mnist.py
assignment_import,fit,model.fit(,112,model = Sequential(),70,tensorflow.keras.models.Sequential.fit,tensorflow,examples/keras/train_keras_mnist.py,allegroai/clearml-serving,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\allegroai@clearml-serving\examples\keras\train_keras_mnist.py
assignment_import,fit,"model.fit(X, y)",12,model = LogisticRegression(),11,sklearn.linear_model.LogisticRegression.fit,sklearn,examples/sklearn/train_model.py,allegroai/clearml-serving,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\allegroai@clearml-serving\examples\sklearn\train_model.py
