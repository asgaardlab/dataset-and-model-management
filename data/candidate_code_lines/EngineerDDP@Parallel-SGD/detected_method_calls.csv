call_root_type,method_name,method_call,line_no,call_root,call_root_line_no,qualifying_name,call_root_package,relative_file_path,repository_name,file_path
import,load,"model = nn.model.Model.load(""CIFARNET.model"")",34,import nn,8.0,nn.model.Model.load,nn,integration_tests/nn_test.py,EngineerDDP/Parallel-SGD,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\EngineerDDP@Parallel-SGD\integration_tests\nn_test.py
import,load,"x, y, x_t, y_t = trans(*dataset.CIFAR().load())",38,from nn import dataset,6.0,nn.dataset.CIFAR().load,nn,integration_tests/nn_test.py,EngineerDDP/Parallel-SGD,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\EngineerDDP@Parallel-SGD\integration_tests\nn_test.py
assignment_import,fit,"model.fit(x, label=y, epoch=1, batch_size=100)",40,"model = nn.model.Model.load(""CIFARNET.model"")",34.0,nn.fit,nn,integration_tests/nn_test.py,EngineerDDP/Parallel-SGD,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\EngineerDDP@Parallel-SGD\integration_tests\nn_test.py
assignment_import,load,"x, y, x_t, y_t = trans(*data.load())",56,data = dataset.MNIST(),53.0,nn.dataset.load,nn,integration_tests/nn_test.py,EngineerDDP/Parallel-SGD,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\EngineerDDP@Parallel-SGD\integration_tests\nn_test.py
assignment_import,fit,"model.fit(x, y, batch_size=64, epoch=2)",58,"model = nn.model.SequentialModel(input_shape=[-1, 784])",45.0,nn.fit,nn,integration_tests/nn_test.py,EngineerDDP/Parallel-SGD,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\EngineerDDP@Parallel-SGD\integration_tests\nn_test.py
assignment_import,fit,"model.fit(x, y, epoch=1000)",85,model = LR(),80.0,nn.fit,nn,integration_tests/nn_test.py,EngineerDDP/Parallel-SGD,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\EngineerDDP@Parallel-SGD\integration_tests\nn_test.py
import,load,pack = pickle.load(file),45,import pickle,1.0,pickle.load,pickle,network/serialization.py,EngineerDDP/Parallel-SGD,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\EngineerDDP@Parallel-SGD\network\serialization.py
import,load,"data: Dict[str, np.ndarray] = np.load(self.path + ""cifar10"", allow_pickle=True)[()]",20,import numpy as np,3.0,numpy.load,numpy,nn/dataset/cifar.py,EngineerDDP/Parallel-SGD,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\EngineerDDP@Parallel-SGD\nn\dataset\cifar.py
import,load,"x,y,_,_ = mk.run(*cifar.CIFAR().load())",64,from nn import dataset as cifar,61.0,nn.dataset.CIFAR().load,nn,nn/dataset/transforms/true_non_iid.py,EngineerDDP/Parallel-SGD,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\EngineerDDP@Parallel-SGD\nn\dataset\transforms\true_non_iid.py
import,load,model = pickle.load(fd),192,import pickle,1.0,pickle.load,pickle,nn/model/abstract.py,EngineerDDP/Parallel-SGD,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\EngineerDDP@Parallel-SGD\nn\model\abstract.py
import,load,for addr in json.load(file):,20,import json,1.0,json.load,json,parallel_computing/context.py,EngineerDDP/Parallel-SGD,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\EngineerDDP@Parallel-SGD\parallel_computing\context.py
,load,return self.__transformer(*self.__decorated_class.load()),183,,,self.__decorated_class.load,self,parallel_sgd/net_package.py,EngineerDDP/Parallel-SGD,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\EngineerDDP@Parallel-SGD\parallel_sgd\net_package.py
,load,"train_x, train_y, test_x, test_y = self.__data.load()",117,,,self.__data.load,self,parallel_sgd/worker.py,EngineerDDP/Parallel-SGD,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\EngineerDDP@Parallel-SGD\parallel_sgd\worker.py
,fit,"history = self.__model.fit(feeder, epoch=1, printer=self.__log)",150,,,self.__model.fit,self,parallel_sgd/worker.py,EngineerDDP/Parallel-SGD,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\EngineerDDP@Parallel-SGD\parallel_sgd\worker.py
import,load,data = json.load(file),10,import json,1.0,json.load,json,parallel_sgd/worker_parser.py,EngineerDDP/Parallel-SGD,C:\Users\tajki\OneDrive\Documents\GitHub\dataset-model-source_code-integration-analyzer\data\repositories_for_manual_analysis\EngineerDDP@Parallel-SGD\parallel_sgd\worker_parser.py
